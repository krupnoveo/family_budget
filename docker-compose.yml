version: '3.8'

services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=family_budget
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d family_budget"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile.backend
    volumes:
      - ./:/app
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-3cq)+e*rd$hc5no&(gm#^!r4@!u8)3z7!rgz3sk0_zxp8*ia1_
      - DATABASE_URL=postgres://user:pass@db:5432/family_budget
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    expose:
      - 8000
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn family_budget_2.wsgi:application --bind 0.0.0.0:8000"
    restart: always

  frontend:
    build:
      context: ./frontend-react
      dockerfile: ../Dockerfile.frontend
    volumes:
      - react_build:/app/build
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    restart: always

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/staticfiles
      - react_build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  react_build:



